{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nexport function GetUser() {\n  var currentUser, db, docRef, result;\n  return _regeneratorRuntime.async(function GetUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          currentUser = firebase.auth().currentUser;\n          db = firebase.firestore();\n          docRef = db.collection(\"users\").doc(currentUser.uid);\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(docRef.get());\n\n        case 6:\n          result = _context.sent;\n          return _context.abrupt(\"return\", result.data());\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0.message);\n          return _context.abrupt(\"return\", undefined);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n}\nexport function updateUser(user) {\n  var currentUser, db;\n  return _regeneratorRuntime.async(function updateUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          currentUser = firebase.auth().currentUser;\n          db = firebase.firestore();\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(db.collection(\"users\").doc(currentUser.uid).update(user));\n\n        case 5:\n          return _context2.abrupt(\"return\", true);\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0.message);\n          return _context2.abrupt(\"return\", false);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n}\nexport function updateEmail(email, password, newEmail) {\n  var result, res, user, currentUser;\n  return _regeneratorRuntime.async(function updateEmail$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(email + \" \" + password);\n          result = false;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(signIn(email, password));\n\n        case 4:\n          res = _context3.sent;\n\n          if (!res) {\n            _context3.next = 13;\n            break;\n          }\n\n          _context3.next = 8;\n          return _regeneratorRuntime.awrap(GetUser());\n\n        case 8:\n          user = _context3.sent;\n          user.email = newEmail;\n          updateUser(user);\n          currentUser = firebase.auth().currentUser;\n          result = new Promise(function (resolve, reject) {\n            currentUser.updateEmail(newEmail).then(function () {\n              resolve(true);\n            }).catch(function (error) {\n              console.log(error);\n              reject(error.message);\n            });\n          });\n\n        case 13:\n          return _context3.abrupt(\"return\", result);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function updatePassword(email, password, newPassword) {\n  var result, res, currentUser;\n  return _regeneratorRuntime.async(function updatePassword$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          result = false;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(signIn(email, password));\n\n        case 3:\n          res = _context4.sent;\n\n          if (res) {\n            currentUser = firebase.auth().currentUser;\n            result = new Promise(function (resolve, reject) {\n              currentUser.updatePassword(newPassword).then(function () {\n                resolve(true);\n              }).catch(function (error) {\n                console.log(error);\n                reject(error.message);\n              });\n            });\n          }\n\n          return _context4.abrupt(\"return\", result);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function signIn(email, password) {\n  var result;\n  return _regeneratorRuntime.async(function signIn$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          result = {};\n          result = new Promise(function (resolve, reject) {\n            firebase.auth().signInWithEmailAndPassword(email, password).then(function (userCredential) {\n              resolve(true);\n            }).catch(function (error) {\n              console.log(error);\n              reject(error.message);\n            });\n          });\n          return _context5.abrupt(\"return\", result);\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function signOut() {\n  return _regeneratorRuntime.async(function signOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          firebase.auth().signOut();\n\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/enzotoyos/Desktop/Best-Movie/src/screens/utils/GetDataUser.js"],"names":["firebase","GetUser","currentUser","auth","db","firestore","docRef","collection","doc","uid","get","result","data","console","log","message","undefined","updateUser","user","update","updateEmail","email","password","newEmail","signIn","res","Promise","resolve","reject","then","catch","error","updatePassword","newPassword","signInWithEmailAndPassword","userCredential","signOut"],"mappings":"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","sourcesContent":["import firebase from \"firebase\"\nimport \"firebase/firestore\"\n\nexport async function GetUser() {\n  try {\n    const currentUser = firebase.auth().currentUser;\n    const db = firebase.firestore();\n\n    var docRef = db.collection(\"users\").doc(currentUser.uid);\n    const result = await docRef.get();\n    return result.data();\n  } catch (err) {\n    console.log(err.message);\n    return undefined;\n  }\n}\n\nexport async function updateUser(user) {\n  try {\n    const currentUser = firebase.auth().currentUser;\n    const db = firebase.firestore();\n\n    await db.collection(\"users\").doc(currentUser.uid).update(user);\n    return true;\n  } catch (err) {\n    console.log(err.message);\n    return false;\n  }\n}\n\nexport async function updateEmail(email, password, newEmail) {\n  console.log(email + \" \" + password);\n  let result = false;\n\n  let res = await signIn(email, password);\n  if (res) {\n    let user = await GetUser();\n    user.email = newEmail;\n    updateUser(user);\n    const currentUser = firebase.auth().currentUser;\n    result = new Promise((resolve, reject) => {\n      currentUser.updateEmail(newEmail).then(() => {\n        resolve(true);\n      }).catch((error) => {\n        console.log(error);\n        reject(error.message);\n      })\n    });\n  }\n\n  return result;\n}\n\nexport async function updatePassword(email, password, newPassword) {\n  let result = false;\n\n  let res = await signIn(email, password);\n  if (res) {\n    const currentUser = firebase.auth().currentUser;\n    result = new Promise((resolve, reject) => {\n      currentUser.updatePassword(newPassword).then(() => {\n        resolve(true);\n      }).catch((error) => {\n        console.log(error);\n        reject(error.message);\n      })\n    });\n  }\n\n  return result;\n}\n\nexport async function signIn(email, password) {\n  let result = {};\n  result = new Promise((resolve, reject) => {\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        resolve(true);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error.message);\n      });\n  });\n\n  return result;\n}\n\nexport async function signOut() {\n  firebase.auth().signOut();\n}"]},"metadata":{},"sourceType":"module"}