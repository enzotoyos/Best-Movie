{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Utilisateurs\\\\Armand\\\\Documents\\\\Ynov\\\\WebMobilePWA\\\\Best-Movie\\\\src\\\\screens\\\\auth\\\\Login.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Toast from 'react-native-toast-message';\nimport firebase from \"firebase\";\nimport { Layout, Text, TextInput, Button, useTheme, themeColor } from \"react-native-rapi-ui\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode,\n      setTheme = _useTheme.setTheme;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  initializeTheme = function initializeTheme() {\n    var value;\n    return _regeneratorRuntime.async(function initializeTheme$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('theme'));\n\n          case 3:\n            value = _context.sent;\n\n            if (value !== null && value !== undefined) {\n              value === 'true' ? setTheme(\"light\") : setTheme(\"dark\");\n            } else {\n              AsyncStorage.setItem(\"theme\", String(isDarkmode));\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    initializeTheme();\n  }, []);\n\n  var changeTheme = function changeTheme() {\n    isDarkmode ? setTheme(\"light\") : setTheme(\"dark\");\n    AsyncStorage.setItem(\"theme\", String(isDarkmode));\n  };\n\n  var login = function login() {\n    return _regeneratorRuntime.async(function login$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n\n            if (!(email.length == 0)) {\n              _context2.next = 7;\n              break;\n            }\n\n            Toast.show({\n              type: 'info',\n              text1: 'Email non renseigné'\n            });\n            setLoading(false);\n            return _context2.abrupt(\"return\", null);\n\n          case 7:\n            if (!(password == 0)) {\n              _context2.next = 11;\n              break;\n            }\n\n            Toast.show({\n              type: 'info',\n              text1: 'Mot de passe non renseigné'\n            });\n            setLoading(false);\n            return _context2.abrupt(\"return\", null);\n\n          case 11:\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password).then(function (userCredential) {\n              var user = userCredential.user;\n              AsyncStorage.setItem(\"uid\", String(user.uid));\n\n              if (user.emailVerified == false) {\n                Toast.show({\n                  type: 'info',\n                  text1: 'Vous devez vérifier votre Email pour vous connecter'\n                });\n                setLoading(false);\n              } else {\n                Toast.show({\n                  type: 'success',\n                  text1: 'Vous êtes connecté'\n                });\n              }\n            }).catch(function (error) {\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              setLoading(false);\n              Toast.show({\n                type: 'error',\n                text1: 'Adresse mail ou mot de passe incorrect',\n                text2: error.message\n              });\n            }));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"height\",\n    enabled: true,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: isDarkmode ? \"#17171E\" : themeColor.white100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    resizeMode: \"contain\",\n    style: {\n      height: 220,\n      width: 220\n    },\n    source: require(\"../../../assets/login.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 3,\n      paddingHorizontal: 20,\n      paddingBottom: 20,\n      backgroundColor: isDarkmode ? themeColor.dark : themeColor.white\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"bold\",\n    style: {\n      alignSelf: \"center\",\n      padding: 30\n    },\n    size: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Connexion\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    containerStyle: {\n      marginTop: 15\n    },\n    placeholder: \"Entez votre Email\",\n    value: email,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    autoCorrect: false,\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Mot de passe\"), React.createElement(TextInput, {\n    containerStyle: {\n      marginTop: 15\n    },\n    placeholder: \"Entrez votre mot de passe\",\n    value: password,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    text: loading ? \"Loading\" : \"Continue\",\n    onPress: function onPress() {\n      login();\n    },\n    style: {\n      marginTop: 20\n    },\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginTop: 15,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, \"Vous n'avez pas de compte?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"Register\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    size: \"md\",\n    fontWeight: \"bold\",\n    style: {\n      marginLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \"Enregistrez-vous\"))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginTop: 10,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"ForgetPassword\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    size: \"md\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, \"Mot de passe oubli\\xE9\"))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginTop: 30,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      changeTheme();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    size: \"md\",\n    fontWeight: \"bold\",\n    style: {\n      marginLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, isDarkmode ? \"☀️ Mode Clair\" : \"🌑 Mode Sombre\")))))));\n}","map":{"version":3,"sources":["D:/Utilisateurs/Armand/Documents/Ynov/WebMobilePWA/Best-Movie/src/screens/auth/Login.js"],"names":["React","useState","useEffect","AsyncStorage","Toast","firebase","Layout","Text","TextInput","Button","useTheme","themeColor","navigation","isDarkmode","setTheme","email","setEmail","password","setPassword","loading","setLoading","initializeTheme","getItem","value","undefined","setItem","String","console","log","changeTheme","login","length","show","type","text1","auth","signInWithEmailAndPassword","then","userCredential","user","uid","emailVerified","catch","error","errorCode","code","errorMessage","message","text2","flex","flexGrow","justifyContent","alignItems","backgroundColor","white100","height","width","require","paddingHorizontal","paddingBottom","dark","white","alignSelf","padding","marginTop","text","flexDirection","navigate","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  View,\r\n  KeyboardAvoidingView,\r\n  Image,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Toast from 'react-native-toast-message';\r\nimport firebase from \"firebase\";\r\nimport {\r\n  Layout,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  useTheme,\r\n  themeColor,\r\n} from \"react-native-rapi-ui\";\r\n\r\nexport default function ({ navigation }) {\r\n  const { isDarkmode, setTheme } = useTheme();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  initializeTheme = async () => {\r\n    try {\r\n      const value = await AsyncStorage.getItem('theme');\r\n      if (value !== null && value !== undefined) {\r\n        (value === 'true') ? setTheme(\"light\") : setTheme(\"dark\");\r\n      } else {\r\n        AsyncStorage.setItem(\"theme\", String(isDarkmode));\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    initializeTheme();\r\n  }, []);\r\n\r\n  const changeTheme = () => {\r\n    isDarkmode ? setTheme(\"light\") : setTheme(\"dark\");\r\n    AsyncStorage.setItem(\"theme\", String(isDarkmode));\r\n  }\r\n\r\n  const login = async () => {\r\n    setLoading(true);\r\n    if (email.length == 0) {\r\n      Toast.show({\r\n        type: 'info',\r\n        text1: 'Email non renseigné'\r\n      });\r\n      setLoading(false);\r\n      return null;\r\n    } else if (password == 0) {\r\n      Toast.show({\r\n        type: 'info',\r\n        text1: 'Mot de passe non renseigné'\r\n      });\r\n      setLoading(false);\r\n      return null;\r\n    }\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        const user = userCredential.user;\r\n        AsyncStorage.setItem(\"uid\", String(user.uid));\r\n\r\n        if (user.emailVerified == false) {\r\n          Toast.show({\r\n            type: 'info',\r\n            text1: 'Vous devez vérifier votre Email pour vous connecter'\r\n          });\r\n          setLoading(false);\r\n        } else {\r\n          Toast.show({\r\n            type: 'success',\r\n            text1: 'Vous êtes connecté'\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        setLoading(false);\r\n        Toast.show({\r\n          type: 'error',\r\n          text1: 'Adresse mail ou mot de passe incorrect',\r\n          text2: error.message\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"height\" enabled style={{ flex: 1 }}>\r\n      <Layout>\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            flexGrow: 1,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: isDarkmode ? \"#17171E\" : themeColor.white100,\r\n            }}\r\n          >\r\n            <Image\r\n              resizeMode=\"contain\"\r\n              style={{\r\n                height: 220,\r\n                width: 220,\r\n              }}\r\n              source={require(\"../../../assets/login.png\")}\r\n            />\r\n          </View>\r\n          <View\r\n            style={{\r\n              flex: 3,\r\n              paddingHorizontal: 20,\r\n              paddingBottom: 20,\r\n              backgroundColor: isDarkmode ? themeColor.dark : themeColor.white,\r\n            }}\r\n          >\r\n            <Text\r\n              fontWeight=\"bold\"\r\n              style={{\r\n                alignSelf: \"center\",\r\n                padding: 30,\r\n              }}\r\n              size=\"h3\"\r\n            >\r\n              Connexion\r\n            </Text>\r\n            <Text>Email</Text>\r\n            <TextInput\r\n              containerStyle={{ marginTop: 15 }}\r\n              placeholder=\"Entez votre Email\"\r\n              value={email}\r\n              autoCapitalize=\"none\"\r\n              autoCompleteType=\"off\"\r\n              autoCorrect={false}\r\n              keyboardType=\"email-address\"\r\n              onChangeText={(text) => setEmail(text)}\r\n            />\r\n\r\n            <Text style={{ marginTop: 15 }}>Mot de passe</Text>\r\n            <TextInput\r\n              containerStyle={{ marginTop: 15 }}\r\n              placeholder=\"Entrez votre mot de passe\"\r\n              value={password}\r\n              autoCapitalize=\"none\"\r\n              autoCompleteType=\"off\"\r\n              autoCorrect={false}\r\n              secureTextEntry={true}\r\n              onChangeText={(text) => setPassword(text)}\r\n            />\r\n            <Button\r\n              text={loading ? \"Loading\" : \"Continue\"}\r\n              onPress={() => {\r\n                login();\r\n              }}\r\n              style={{\r\n                marginTop: 20,\r\n              }}\r\n              disabled={loading}\r\n            />\r\n\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 15,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Text size=\"md\">Vous n'avez pas de compte?</Text>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  navigation.navigate(\"Register\");\r\n                }}\r\n              >\r\n                <Text\r\n                  size=\"md\"\r\n                  fontWeight=\"bold\"\r\n                  style={{\r\n                    marginLeft: 5,\r\n                  }}\r\n                >\r\n                  Enregistrez-vous\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 10,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  navigation.navigate(\"ForgetPassword\");\r\n                }}\r\n              >\r\n                <Text size=\"md\" fontWeight=\"bold\">\r\n                  Mot de passe oublié\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 30,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  changeTheme();\r\n                }}\r\n              >\r\n                <Text\r\n                  size=\"md\"\r\n                  fontWeight=\"bold\"\r\n                  style={{\r\n                    marginLeft: 5,\r\n                  }}\r\n                >\r\n                  {isDarkmode ? \"☀️ Mode Clair\" : \"🌑 Mode Sombre\"}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </Layout>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}