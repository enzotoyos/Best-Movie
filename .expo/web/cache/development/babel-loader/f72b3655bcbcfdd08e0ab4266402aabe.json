{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Utilisateurs\\\\Armand\\\\Documents\\\\Ynov\\\\WebMobilePWA\\\\Best-Movie\\\\src\\\\screens\\\\auth\\\\Register.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport firebase from \"firebase\";\nimport { Layout, Text, TextInput, Button, useTheme, themeColor } from \"react-native-rapi-ui\";\nimport { AddUserFirestore } from \"../auth/AddUserFirestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Toast from 'react-native-toast-message';\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode,\n      setTheme = _useTheme.setTheme;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var changeTheme = function changeTheme() {\n    isDarkmode ? setTheme(\"light\") : setTheme(\"dark\");\n    AsyncStorage.setItem(\"theme\", String(isDarkmode));\n  };\n\n  function SendEmailVerification() {\n    return _regeneratorRuntime.async(function SendEmailVerification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.auth().currentUser.sendEmailVerification().then(function () {\n              Toast.show({\n                type: 'info',\n                text1: 'Email de vérification envoyé'\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var userID;\n  var user;\n\n  function register() {\n    return _regeneratorRuntime.async(function register$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n\n            if (!(email.length == 0)) {\n              _context2.next = 7;\n              break;\n            }\n\n            Toast.show({\n              type: 'info',\n              text1: 'Email non renseignéé'\n            });\n            setLoading(false);\n            return _context2.abrupt(\"return\", null);\n\n          case 7:\n            if (!(password.length == 0)) {\n              _context2.next = 13;\n              break;\n            }\n\n            Toast.show({\n              type: 'info',\n              text1: 'Mot de passe non renseigné'\n            });\n            setLoading(false);\n            return _context2.abrupt(\"return\", null);\n\n          case 13:\n            if (!(name.lenght == 0)) {\n              _context2.next = 17;\n              break;\n            }\n\n            Toast.show({\n              type: 'info',\n              text1: 'Pseudo non renseigné'\n            });\n            setLoading(false);\n            return _context2.abrupt(\"return\", null);\n\n          case 17:\n            _context2.next = 19;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password).then(function (userCredential) {\n              user = userCredential.user;\n              userID = user.uid;\n              console.log(userID);\n              AddUserFirestore(email, name, userID);\n\n              if (user.emailVerified == false) {\n                SendEmailVerification();\n              }\n\n              setLoading(false);\n            }).catch(function (error) {\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              setLoading(false);\n              alert(errorMessage);\n            }));\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"height\",\n    enabled: true,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: isDarkmode ? \"#17171E\" : themeColor.white100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    resizeMode: \"contain\",\n    style: {\n      height: 220,\n      width: 220\n    },\n    source: require(\"../../../assets/register.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 3,\n      paddingHorizontal: 20,\n      paddingBottom: 20,\n      backgroundColor: isDarkmode ? themeColor.dark : themeColor.white\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"bold\",\n    size: \"h3\",\n    style: {\n      alignSelf: \"center\",\n      padding: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Enregistrez-vous\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    containerStyle: {\n      marginTop: 15\n    },\n    placeholder: \"Entrez votre Email\",\n    value: email,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    autoCorrect: false,\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Nom - Pr\\xE9nom\"), React.createElement(TextInput, {\n    containerStyle: {\n      marginTop: 15\n    },\n    placeholder: \"Entrez votre pseudo\",\n    value: name,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"Mot de Passe\"), React.createElement(TextInput, {\n    containerStyle: {\n      marginTop: 15\n    },\n    placeholder: \"Entrez votre Mot de passe\",\n    value: password,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    text: loading ? \"en cours\" : \"Creez votre compte\",\n    onPress: function onPress() {\n      register();\n    },\n    style: {\n      marginTop: 20\n    },\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginTop: 15,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, \"Vous avez d\\xE9j\\xE0 un compte ?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"Login\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    size: \"md\",\n    fontWeight: \"bold\",\n    style: {\n      marginLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"Connectez-vous\"))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginTop: 30,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      changeTheme();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    size: \"md\",\n    fontWeight: \"bold\",\n    style: {\n      marginLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, isDarkmode ? \"☀️ Mode clair\" : \"🌑 Mode sombre \")))))));\n}","map":{"version":3,"sources":["D:/Utilisateurs/Armand/Documents/Ynov/WebMobilePWA/Best-Movie/src/screens/auth/Register.js"],"names":["React","useState","firebase","Layout","Text","TextInput","Button","useTheme","themeColor","AddUserFirestore","AsyncStorage","Toast","navigation","isDarkmode","setTheme","email","setEmail","password","setPassword","name","setName","loading","setLoading","changeTheme","setItem","String","SendEmailVerification","auth","currentUser","sendEmailVerification","then","show","type","text1","userID","user","register","length","lenght","createUserWithEmailAndPassword","userCredential","uid","console","log","emailVerified","catch","error","errorCode","code","errorMessage","message","alert","flex","flexGrow","justifyContent","alignItems","backgroundColor","white100","height","width","require","paddingHorizontal","paddingBottom","dark","white","alignSelf","padding","marginTop","text","flexDirection","navigate","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  View,\r\n  KeyboardAvoidingView,\r\n  Image\r\n} from \"react-native\";\r\nimport firebase from \"firebase\";\r\n\r\nimport {\r\n  Layout,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  useTheme,\r\n  themeColor,\r\n} from \"react-native-rapi-ui\";\r\nimport { AddUserFirestore } from \"../auth/AddUserFirestore\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport Toast from 'react-native-toast-message';\r\n\r\nexport default function ({ navigation }) {\r\n  const { isDarkmode, setTheme } = useTheme();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const changeTheme = () => {\r\n    isDarkmode ? setTheme(\"light\") : setTheme(\"dark\");\r\n    AsyncStorage.setItem(\"theme\", String(isDarkmode));\r\n  }\r\n\r\n  async function SendEmailVerification() {\r\n    await firebase\r\n      .auth()\r\n      .currentUser.sendEmailVerification()\r\n      .then(() => {\r\n        Toast.show({\r\n          type: 'info',\r\n          text1: 'Email de vérification envoyé'\r\n        });\r\n      });\r\n  }\r\n\r\n  var userID;\r\n  let user;\r\n  async function register() {\r\n    setLoading(true);\r\n    if (email.length == 0) {\r\n      Toast.show({\r\n        type: 'info',\r\n        text1: 'Email non renseignéé'\r\n      });\r\n      setLoading(false);\r\n      return null;\r\n    } else if (password.length == 0) {\r\n      Toast.show({\r\n        type: 'info',\r\n        text1: 'Mot de passe non renseigné'\r\n      });\r\n      setLoading(false);\r\n      return null;\r\n    } else if (name.lenght == 0) {\r\n      Toast.show({\r\n        type: 'info',\r\n        text1: 'Pseudo non renseigné'\r\n      });\r\n      setLoading(false);\r\n      return null;\r\n    }\r\n    await firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        user = userCredential.user;\r\n        userID = user.uid;\r\n        console.log(userID);\r\n        AddUserFirestore(email, name, userID);\r\n        if (user.emailVerified == false) {\r\n          SendEmailVerification();\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // ...\r\n        setLoading(false);\r\n        alert(errorMessage);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"height\" enabled style={{ flex: 1 }}>\r\n      <Layout>\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            flexGrow: 1,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: isDarkmode ? \"#17171E\" : themeColor.white100,\r\n            }}\r\n          >\r\n            <Image\r\n              resizeMode=\"contain\"\r\n              style={{\r\n                height: 220,\r\n                width: 220,\r\n              }}\r\n              source={require(\"../../../assets/register.png\")}\r\n            />\r\n          </View>\r\n          <View\r\n            style={{\r\n              flex: 3,\r\n              paddingHorizontal: 20,\r\n              paddingBottom: 20,\r\n              backgroundColor: isDarkmode ? themeColor.dark : themeColor.white,\r\n            }}\r\n          >\r\n            <Text\r\n              fontWeight=\"bold\"\r\n              size=\"h3\"\r\n              style={{\r\n                alignSelf: \"center\",\r\n                padding: 30,\r\n              }}\r\n            >\r\n              Enregistrez-vous\r\n            </Text>\r\n            <Text>Email</Text>\r\n            <TextInput\r\n              containerStyle={{ marginTop: 15 }}\r\n              placeholder=\"Entrez votre Email\"\r\n              value={email}\r\n              autoCapitalize=\"none\"\r\n              autoCompleteType=\"off\"\r\n              autoCorrect={false}\r\n              keyboardType=\"email-address\"\r\n              onChangeText={(text) => setEmail(text)}\r\n            />\r\n\r\n            <Text style={{ marginTop: 15 }}>Nom - Prénom</Text>\r\n            <TextInput\r\n              containerStyle={{ marginTop: 15 }}\r\n              placeholder=\"Entrez votre pseudo\"\r\n              value={name}\r\n              autoCapitalize=\"none\"\r\n              autoCompleteType=\"off\"\r\n              autoCorrect={false}\r\n              onChangeText={(text) => setName(text)}\r\n            />\r\n\r\n            <Text style={{ marginTop: 15 }}>Mot de Passe</Text>\r\n            <TextInput\r\n              containerStyle={{ marginTop: 15 }}\r\n              placeholder=\"Entrez votre Mot de passe\"\r\n              value={password}\r\n              autoCapitalize=\"none\"\r\n              autoCompleteType=\"off\"\r\n              autoCorrect={false}\r\n              secureTextEntry={true}\r\n              onChangeText={(text) => setPassword(text)}\r\n            />\r\n            <Button\r\n              text={loading ? \"en cours\" : \"Creez votre compte\"}\r\n              onPress={() => {\r\n                register();\r\n              }}\r\n              style={{\r\n                marginTop: 20,\r\n              }}\r\n              disabled={loading}\r\n            />\r\n\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 15,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Text size=\"md\">Vous avez déjà un compte ?</Text>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  navigation.navigate(\"Login\");\r\n                }}\r\n              >\r\n                <Text\r\n                  size=\"md\"\r\n                  fontWeight=\"bold\"\r\n                  style={{\r\n                    marginLeft: 5,\r\n                  }}\r\n                >\r\n                  Connectez-vous\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 30,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  changeTheme();\r\n                }}\r\n              >\r\n                <Text\r\n                  size=\"md\"\r\n                  fontWeight=\"bold\"\r\n                  style={{\r\n                    marginLeft: 5,\r\n                  }}\r\n                >\r\n                  {isDarkmode ? \"☀️ Mode clair\" : \"🌑 Mode sombre \"}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </Layout>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}