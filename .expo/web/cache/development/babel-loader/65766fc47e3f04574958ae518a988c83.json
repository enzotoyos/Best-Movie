{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Documents\\\\Ynov\\\\Mobile\\\\Best-Movie\\\\src\\\\screens\\\\auth\\\\Register.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Layout, Text, TextInput, Button, useTheme, themeColor } from \"react-native-rapi-ui\";\nimport { createUserWithEmailAndPassword } from \"../utils/controllerFirestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Toast from 'react-native-toast-message';\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode,\n      setTheme = _useTheme.setTheme;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var changeTheme = function changeTheme() {\n    isDarkmode ? setTheme(\"light\") : setTheme(\"dark\");\n    AsyncStorage.setItem(\"theme\", String(isDarkmode));\n  };\n\n  function register() {\n    return _regeneratorRuntime.async(function register$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n\n            if (!(email.length == 0)) {\n              _context.next = 7;\n              break;\n            }\n\n            Toast.show({\n              type: 'info',\n              text1: 'Email non renseign√©√©'\n            });\n            setLoading(false);\n            return _context.abrupt(\"return\", null);\n\n          case 7:\n            if (!(password.length == 0)) {\n              _context.next = 13;\n              break;\n            }\n\n            Toast.show({\n              type: 'info',\n              text1: 'Mot de passe non renseign√©'\n            });\n            setLoading(false);\n            return _context.abrupt(\"return\", null);\n\n          case 13:\n            if (!(name.lenght == 0)) {\n              _context.next = 17;\n              break;\n            }\n\n            Toast.show({\n              type: 'info',\n              text1: 'Pseudo non renseign√©'\n            });\n            setLoading(false);\n            return _context.abrupt(\"return\", null);\n\n          case 17:\n            _context.next = 19;\n            return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(email, name, password));\n\n          case 19:\n            setLoading(false);\n            navigation.navigate(\"Login\");\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"height\",\n    enabled: true,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: isDarkmode ? \"#17171E\" : themeColor.white100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    resizeMode: \"contain\",\n    style: {\n      height: 220,\n      width: 220\n    },\n    source: require(\"../../../assets/register.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 3,\n      paddingHorizontal: 20,\n      paddingBottom: 20,\n      backgroundColor: isDarkmode ? themeColor.dark : themeColor.white\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"bold\",\n    size: \"h3\",\n    style: {\n      alignSelf: \"center\",\n      padding: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Enregistrez-vous\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    containerStyle: {\n      marginTop: 15\n    },\n    placeholder: \"Entrez votre Email\",\n    value: email,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    autoCorrect: false,\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Pseudo\"), React.createElement(TextInput, {\n    containerStyle: {\n      marginTop: 15\n    },\n    placeholder: \"Entrez votre pseudo\",\n    value: name,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Mot de Passe\"), React.createElement(TextInput, {\n    containerStyle: {\n      marginTop: 15\n    },\n    placeholder: \"Entrez votre Mot de passe\",\n    value: password,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    text: loading ? \"en cours\" : \"Creez votre compte\",\n    onPress: function onPress() {\n      register();\n    },\n    style: {\n      marginTop: 20\n    },\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginTop: 15,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"Vous avez d\\xE9j\\xE0 un compte ?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"Login\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    size: \"md\",\n    fontWeight: \"bold\",\n    style: {\n      marginLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, \"Connectez-vous\"))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginTop: 30,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      changeTheme();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    size: \"md\",\n    fontWeight: \"bold\",\n    style: {\n      marginLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, isDarkmode ? \"‚òÄÔ∏è Mode clair\" : \"üåë Mode sombre \")))))));\n}","map":{"version":3,"sources":["D:/Documents/Ynov/Mobile/Best-Movie/src/screens/auth/Register.js"],"names":["React","useState","Layout","Text","TextInput","Button","useTheme","themeColor","createUserWithEmailAndPassword","AsyncStorage","Toast","navigation","isDarkmode","setTheme","email","setEmail","password","setPassword","name","setName","loading","setLoading","changeTheme","setItem","String","register","length","show","type","text1","lenght","navigate","flex","flexGrow","justifyContent","alignItems","backgroundColor","white100","height","width","require","paddingHorizontal","paddingBottom","dark","white","alignSelf","padding","marginTop","text","flexDirection","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ScrollView,\n  TouchableOpacity,\n  View,\n  KeyboardAvoidingView,\n  Image\n} from \"react-native\";\nimport {\n  Layout,\n  Text,\n  TextInput,\n  Button,\n  useTheme,\n  themeColor,\n} from \"react-native-rapi-ui\";\nimport { createUserWithEmailAndPassword } from \"../utils/controllerFirestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Toast from 'react-native-toast-message';\n\nexport default function ({ navigation }) {\n  const { isDarkmode, setTheme } = useTheme();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const changeTheme = () => {\n    isDarkmode ? setTheme(\"light\") : setTheme(\"dark\");\n    AsyncStorage.setItem(\"theme\", String(isDarkmode));\n  }\n\n  async function register() {\n    setLoading(true);\n    if (email.length == 0) {\n      Toast.show({\n        type: 'info',\n        text1: 'Email non renseign√©√©'\n      });\n      setLoading(false);\n      return null;\n    } else if (password.length == 0) {\n      Toast.show({\n        type: 'info',\n        text1: 'Mot de passe non renseign√©'\n      });\n      setLoading(false);\n      return null;\n    } else if (name.lenght == 0) {\n      Toast.show({\n        type: 'info',\n        text1: 'Pseudo non renseign√©'\n      });\n      setLoading(false);\n      return null;\n    }\n    await createUserWithEmailAndPassword(email, name, password);\n    setLoading(false);\n    navigation.navigate(\"Login\");\n  }\n\n  return (\n    <KeyboardAvoidingView behavior=\"height\" enabled style={{ flex: 1 }}>\n      <Layout>\n        <ScrollView\n          contentContainerStyle={{\n            flexGrow: 1,\n          }}\n        >\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              backgroundColor: isDarkmode ? \"#17171E\" : themeColor.white100,\n            }}\n          >\n            <Image\n              resizeMode=\"contain\"\n              style={{\n                height: 220,\n                width: 220,\n              }}\n              source={require(\"../../../assets/register.png\")}\n            />\n          </View>\n          <View\n            style={{\n              flex: 3,\n              paddingHorizontal: 20,\n              paddingBottom: 20,\n              backgroundColor: isDarkmode ? themeColor.dark : themeColor.white,\n            }}\n          >\n            <Text\n              fontWeight=\"bold\"\n              size=\"h3\"\n              style={{\n                alignSelf: \"center\",\n                padding: 30,\n              }}\n            >\n              Enregistrez-vous\n            </Text>\n            <Text>Email</Text>\n            <TextInput\n              containerStyle={{ marginTop: 15 }}\n              placeholder=\"Entrez votre Email\"\n              value={email}\n              autoCapitalize=\"none\"\n              autoCompleteType=\"off\"\n              autoCorrect={false}\n              keyboardType=\"email-address\"\n              onChangeText={(text) => setEmail(text)}\n            />\n\n            <Text style={{ marginTop: 15 }}>Pseudo</Text>\n            <TextInput\n              containerStyle={{ marginTop: 15 }}\n              placeholder=\"Entrez votre pseudo\"\n              value={name}\n              autoCapitalize=\"none\"\n              autoCompleteType=\"off\"\n              autoCorrect={false}\n              onChangeText={(text) => setName(text)}\n            />\n\n            <Text style={{ marginTop: 15 }}>Mot de Passe</Text>\n            <TextInput\n              containerStyle={{ marginTop: 15 }}\n              placeholder=\"Entrez votre Mot de passe\"\n              value={password}\n              autoCapitalize=\"none\"\n              autoCompleteType=\"off\"\n              autoCorrect={false}\n              secureTextEntry={true}\n              onChangeText={(text) => setPassword(text)}\n            />\n            <Button\n              text={loading ? \"en cours\" : \"Creez votre compte\"}\n              onPress={() => {\n                register();\n              }}\n              style={{\n                marginTop: 20,\n              }}\n              disabled={loading}\n            />\n\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                marginTop: 15,\n                justifyContent: \"center\",\n              }}\n            >\n              <Text size=\"md\">Vous avez d√©j√† un compte ?</Text>\n              <TouchableOpacity\n                onPress={() => {\n                  navigation.navigate(\"Login\");\n                }}\n              >\n                <Text\n                  size=\"md\"\n                  fontWeight=\"bold\"\n                  style={{\n                    marginLeft: 5,\n                  }}\n                >\n                  Connectez-vous\n                </Text>\n              </TouchableOpacity>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                marginTop: 30,\n                justifyContent: \"center\",\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  changeTheme();\n                }}\n              >\n                <Text\n                  size=\"md\"\n                  fontWeight=\"bold\"\n                  style={{\n                    marginLeft: 5,\n                  }}\n                >\n                  {isDarkmode ? \"‚òÄÔ∏è Mode clair\" : \"üåë Mode sombre \"}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </ScrollView>\n      </Layout>\n    </KeyboardAvoidingView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}