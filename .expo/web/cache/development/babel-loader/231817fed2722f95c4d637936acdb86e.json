{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Utilisateurs\\\\Armand\\\\Documents\\\\Ynov\\\\WebMobilePWA\\\\Best-Movie\\\\src\\\\screens\\\\About.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport { Layout, Text, themeColor, useTheme } from \"react-native-rapi-ui\";\nimport { discoveryFilms } from \"../API/index\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport firebase from \"firebase/app\";\nimport { getLikedFilms } from \"../screens/auth/AddUserFirestore\";\nimport { Card, CardTitle, CardContent, CardAction, CardButton, CardImage } from \"react-native-cards\";\nimport \"firebase/firestore\";\nexport default function (_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode,\n      setTheme = _useTheme.setTheme;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      likedFilms = _useState2[0],\n      setLikedFilms = _useState2[1];\n\n  var onShare = function onShare(title) {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Share.share({\n              message: \"Tu devrais regarder ce film ! \",\n              title: title\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (result.action === Share.sharedAction) {\n              if (result.activityType) {} else {}\n            } else if (result.action === Share.dismissedAction) {}\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            alert(_context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var getFilmsLiked = function getFilmsLiked() {\n    var db = firebase.firestore();\n    var user = firebase.auth().currentUser;\n    var docRef = db.collection(\"liked_films\").doc(user.uid);\n    docRef.get().then(function (doc) {\n      if (doc.exists) {\n        var value = doc.data();\n        console.log(\"test\", value.movie);\n        setLikedFilms(value.movie);\n      } else {\n        console.log(\"No such document!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n    console.log(likedFilms);\n  };\n\n  useEffect(function () {\n    getFilmsLiked();\n  }, []);\n\n  var RenderCard = function RenderCard(_ref2) {\n    var item = _ref2.item,\n        i = _ref2.i;\n    return React.createElement(Card, {\n      style: {\n        borderRadius: 7,\n        marginLeft: 15,\n        marginRight: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, React.createElement(CardImage, {\n      source: {\n        uri: \"https://image.tmdb.org/t/p/w500/\" + item.posterPath\n      },\n      title: item.movieTitle,\n      style: {\n        borderRadius: 7\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }), React.createElement(CardTitle, {\n      subtitle: \"Ajout√© le: \" + item.addedAt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }), React.createElement(CardAction, {\n      separator: true,\n      inColumn: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, React.createElement(CardButton, {\n      onPress: function onPress() {\n        return onShare(item.movieTitle);\n      },\n      title: \"Partager\",\n      color: \"#FEB557\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), React.createElement(CardButton, {\n      onPress: function onPress() {},\n      title: \"Explorer\",\n      color: \"#FEB557\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  return React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Votre collection\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: likedFilms,\n    renderItem: RenderCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"transparent\"\n  },\n  card: {\n    flex: 1,\n    borderRadius: 20,\n    borderWidth: 2,\n    backgroundColor: \"transparent\",\n    borderColor: \"transparent\",\n    justifyContent: \"center\",\n    marginBottom: \"50%\"\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 50,\n    backgroundColor: \"transparent\"\n  },\n  image: {\n    borderRadius: 18,\n    width: \"100%\",\n    height: \"100%\"\n  },\n  title: {\n    textAlign: \"center\",\n    fontSize: 20,\n    marginTop: \"5%\",\n    marginBottom: \"2%\"\n  }\n});","map":{"version":3,"sources":["D:/Utilisateurs/Armand/Documents/Ynov/WebMobilePWA/Best-Movie/src/screens/About.js"],"names":["React","Component","useEffect","useState","Layout","Text","themeColor","useTheme","discoveryFilms","firebase","getLikedFilms","Card","CardTitle","CardContent","CardAction","CardButton","CardImage","navigation","isDarkmode","setTheme","likedFilms","setLikedFilms","onShare","title","Share","share","message","result","action","sharedAction","activityType","dismissedAction","alert","getFilmsLiked","db","firestore","user","auth","currentUser","docRef","collection","doc","uid","get","then","exists","value","data","console","log","movie","catch","error","RenderCard","item","i","borderRadius","marginLeft","marginRight","uri","posterPath","movieTitle","addedAt","styles","StyleSheet","create","container","flex","backgroundColor","card","borderWidth","borderColor","justifyContent","marginBottom","text","textAlign","fontSize","image","width","height","marginTop"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Button,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n  FlatList,\r\n  Share,\r\n} from \"react-native\";\r\nimport { Layout, Text, themeColor, useTheme } from \"react-native-rapi-ui\";\r\nimport { discoveryFilms } from \"../API/index\";\r\nimport { ScrollView } from \"react-native\";\r\nimport firebase from \"firebase/app\";\r\nimport { getLikedFilms } from \"../screens/auth/AddUserFirestore\";\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardContent,\r\n  CardAction,\r\n  CardButton,\r\n  CardImage,\r\n} from \"react-native-cards\";\r\nimport \"firebase/firestore\";\r\n\r\nexport default function ({ navigation }) {\r\n  const { isDarkmode, setTheme } = useTheme();\r\n  const [likedFilms, setLikedFilms] = useState([]);\r\n\r\n  const onShare = async (title) => {\r\n    try {\r\n      const result = await Share.share({\r\n        message: \"Tu devrais regarder ce film ! \",\r\n        title,\r\n      });\r\n      if (result.action === Share.sharedAction) {\r\n        if (result.activityType) {\r\n          // shared with activity type of result.activityType\r\n        } else {\r\n          // shared\r\n        }\r\n      } else if (result.action === Share.dismissedAction) {\r\n        // dismissed\r\n      }\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const getFilmsLiked = () => {\r\n    var db = firebase.firestore();\r\n    const user = firebase.auth().currentUser;\r\n    var docRef = db.collection(\"liked_films\").doc(user.uid);\r\n\r\n    docRef\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          let value = doc.data();\r\n          console.log(\"test\", value.movie);\r\n          setLikedFilms(value.movie);\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document!\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n    console.log(likedFilms);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFilmsLiked();\r\n  }, []);\r\n\r\n  const RenderCard = ({ item, i }) => (\r\n    <Card\r\n      style={{\r\n        borderRadius: 7,\r\n        marginLeft: 15,\r\n        marginRight: 15,\r\n      }}\r\n    >\r\n      <CardImage\r\n        source={{\r\n          uri: \"https://image.tmdb.org/t/p/w500/\" + item.posterPath,\r\n        }}\r\n        title={item.movieTitle}\r\n        style={{ borderRadius: 7 }}\r\n      />\r\n      <CardTitle subtitle={\"Ajout√© le: \" + item.addedAt} />\r\n      <CardAction separator={true} inColumn={false}>\r\n        <CardButton\r\n          onPress={() => onShare(item.movieTitle)}\r\n          title=\"Partager\"\r\n          color=\"#FEB557\"\r\n        />\r\n        <CardButton onPress={() => {}} title=\"Explorer\" color=\"#FEB557\" />\r\n      </CardAction>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Layout>\r\n      <View>\r\n        <Text style={styles.title}>Votre collection</Text>\r\n      </View>\r\n      <View>\r\n        <ScrollView>\r\n          <FlatList data={likedFilms} renderItem={RenderCard}></FlatList>\r\n        </ScrollView>\r\n      </View>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  card: {\r\n    flex: 1,\r\n    borderRadius: 20,\r\n    borderWidth: 2,\r\n    backgroundColor: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"50%\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    fontSize: 50,\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  image: {\r\n    borderRadius: 18,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontSize: 20,\r\n    marginTop: \"5%\",\r\n    marginBottom: \"2%\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}