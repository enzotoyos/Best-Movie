{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport function updateCurrentPage() {\n  var currentUser, db, currentPage, docRef, result;\n  return _regeneratorRuntime.async(function updateCurrentPage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          currentUser = firebase.auth().currentUser;\n          db = firebase.firestore();\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"currentPage\"));\n\n        case 5:\n          currentPage = _context.sent;\n          console.log(currentPage);\n          currentPage = parseInt(currentPage) + 1;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(db.collection(\"users\").doc(currentUser.uid).update({\n            currentPage: currentPage\n          }));\n\n        case 10:\n          docRef = db.collection(\"users\").doc(currentUser.uid);\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(docRef.get());\n\n        case 13:\n          result = _context.sent;\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"currentPage\", String(result.data().currentPage)));\n\n        case 16:\n          return _context.abrupt(\"return\", result.data().currentPage);\n\n        case 19:\n          _context.prev = 19;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0.message);\n          return _context.abrupt(\"return\", undefined);\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 19]], Promise);\n}\nexport function GetUser() {\n  var currentUser, db, docRef, result;\n  return _regeneratorRuntime.async(function GetUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          currentUser = firebase.auth().currentUser;\n          db = firebase.firestore();\n          docRef = db.collection(\"users\").doc(currentUser.uid);\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(docRef.get());\n\n        case 6:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", result.data());\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0.message);\n          return _context2.abrupt(\"return\", undefined);\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n}\nexport function updateUser(user) {\n  var currentUser, db;\n  return _regeneratorRuntime.async(function updateUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          currentUser = firebase.auth().currentUser;\n          db = firebase.firestore();\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(db.collection(\"users\").doc(currentUser.uid).update(user));\n\n        case 5:\n          return _context3.abrupt(\"return\", true);\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0.message);\n          return _context3.abrupt(\"return\", false);\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n}\nexport function updateEmail(email, password, newEmail) {\n  var result, res, user, currentUser;\n  return _regeneratorRuntime.async(function updateEmail$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log(email + \" \" + password);\n          result = false;\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(signIn(email, password));\n\n        case 4:\n          res = _context4.sent;\n\n          if (!res) {\n            _context4.next = 13;\n            break;\n          }\n\n          _context4.next = 8;\n          return _regeneratorRuntime.awrap(GetUser());\n\n        case 8:\n          user = _context4.sent;\n          user.email = newEmail;\n          updateUser(user);\n          currentUser = firebase.auth().currentUser;\n          result = new Promise(function (resolve, reject) {\n            currentUser.updateEmail(newEmail).then(function () {\n              resolve(true);\n            }).catch(function (error) {\n              console.log(error);\n              reject(error.message);\n            });\n          });\n\n        case 13:\n          return _context4.abrupt(\"return\", result);\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function updatePassword(email, password, newPassword) {\n  var result, res, currentUser;\n  return _regeneratorRuntime.async(function updatePassword$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          result = false;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(signIn(email, password));\n\n        case 3:\n          res = _context5.sent;\n\n          if (res) {\n            currentUser = firebase.auth().currentUser;\n            result = new Promise(function (resolve, reject) {\n              currentUser.updatePassword(newPassword).then(function () {\n                resolve(true);\n              }).catch(function (error) {\n                console.log(error);\n                reject(error.message);\n              });\n            });\n          }\n\n          return _context5.abrupt(\"return\", result);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function signIn(email, password) {\n  var result;\n  return _regeneratorRuntime.async(function signIn$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          result = {};\n          result = new Promise(function (resolve, reject) {\n            firebase.auth().signInWithEmailAndPassword(email, password).then(function (userCredential) {\n              resolve(true);\n            }).catch(function (error) {\n              console.log(error);\n              reject(error.message);\n            });\n          });\n          return _context6.abrupt(\"return\", result);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function uploadImage(uri, ext) {\n  var result, metadata, currentUser, uploadTask;\n  return _regeneratorRuntime.async(function uploadImage$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          result = {};\n          metadata = {\n            contentType: 'image/jpeg'\n          };\n          console.log(uri);\n\n          try {\n            currentUser = firebase.auth().currentUser;\n            uploadTask = firebase.storage().ref('avatar/' + currentUser.uid + '.' + ext).putString(uri, 'base64', {\n              contentType: 'image/jpg'\n            });\n            uploadTask.on('state_changed', function (snapshot) {\n              var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n              console.log('Upload is ' + progress + '% done');\n\n              switch (snapshot.state) {\n                case firebase.storage.TaskState.PAUSED:\n                  console.log('Upload is paused');\n                  break;\n\n                case firebase.storage.TaskState.RUNNING:\n                  console.log('Upload is running');\n                  break;\n              }\n            }, function (error) {\n              console.log(error);\n            }, function () {\n              uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                console.log('File available at', downloadURL);\n              });\n            });\n          } catch (error) {\n            console.log(error);\n          }\n\n          return _context7.abrupt(\"return\", result);\n\n        case 5:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function signOut() {\n  return _regeneratorRuntime.async(function signOut$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"currentPage\", String('0')));\n\n        case 2:\n          _context8.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"uid\", \"\"));\n\n        case 4:\n          firebase.auth().signOut();\n\n        case 5:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/enzotoyos/Desktop/Best-Movie/src/screens/utils/GetDataUser.js"],"names":["firebase","AsyncStorage","updateCurrentPage","currentUser","auth","db","firestore","getItem","currentPage","console","log","parseInt","collection","doc","uid","update","docRef","get","result","setItem","String","data","message","undefined","GetUser","updateUser","user","updateEmail","email","password","newEmail","signIn","res","Promise","resolve","reject","then","catch","error","updatePassword","newPassword","signInWithEmailAndPassword","userCredential","uploadImage","uri","ext","metadata","contentType","uploadTask","storage","ref","putString","on","snapshot","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","getDownloadURL","downloadURL","signOut"],"mappings":"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","sourcesContent":["import firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport async function updateCurrentPage() {\n  try {\n    const currentUser = firebase.auth().currentUser;\n    const db = firebase.firestore();\n\n    let currentPage = await AsyncStorage.getItem(\"currentPage\");\n    console.log(currentPage);\n    currentPage = parseInt(currentPage) + 1;\n    await db.collection(\"users\").doc(currentUser.uid).update({ currentPage: currentPage });\n    var docRef = db.collection(\"users\").doc(currentUser.uid);\n    const result = await docRef.get();\n    await AsyncStorage.setItem(\"currentPage\", String(result.data().currentPage));\n\n    return result.data().currentPage;\n  } catch (err) {\n    console.log(err.message);\n    return undefined;\n  }\n}\n\nexport async function GetUser() {\n  try {\n    const currentUser = firebase.auth().currentUser;\n    const db = firebase.firestore();\n\n    var docRef = db.collection(\"users\").doc(currentUser.uid);\n    const result = await docRef.get();\n    return result.data();\n  } catch (err) {\n    console.log(err.message);\n    return undefined;\n  }\n}\n\nexport async function updateUser(user) {\n  try {\n    const currentUser = firebase.auth().currentUser;\n    const db = firebase.firestore();\n\n    await db.collection(\"users\").doc(currentUser.uid).update(user);\n    return true;\n  } catch (err) {\n    console.log(err.message);\n    return false;\n  }\n}\n\nexport async function updateEmail(email, password, newEmail) {\n  console.log(email + \" \" + password);\n  let result = false;\n\n  let res = await signIn(email, password);\n  if (res) {\n    let user = await GetUser();\n    user.email = newEmail;\n    updateUser(user);\n    const currentUser = firebase.auth().currentUser;\n    result = new Promise((resolve, reject) => {\n      currentUser.updateEmail(newEmail).then(() => {\n        resolve(true);\n      }).catch((error) => {\n        console.log(error);\n        reject(error.message);\n      })\n    });\n  }\n\n  return result;\n}\n\nexport async function updatePassword(email, password, newPassword) {\n  let result = false;\n\n  let res = await signIn(email, password);\n  if (res) {\n    const currentUser = firebase.auth().currentUser;\n    result = new Promise((resolve, reject) => {\n      currentUser.updatePassword(newPassword).then(() => {\n        resolve(true);\n      }).catch((error) => {\n        console.log(error);\n        reject(error.message);\n      })\n    });\n  }\n\n  return result;\n}\n\nexport async function signIn(email, password) {\n  let result = {};\n  result = new Promise((resolve, reject) => {\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        resolve(true);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error.message);\n      });\n  });\n\n  return result;\n}\n\nexport async function uploadImage(uri, ext) {\n  let result = {};\n  // Create a root reference\n  var metadata = {\n    contentType: 'image/jpeg',\n  };\n  console.log(uri);\n\n\n  try {\n    const currentUser = firebase.auth().currentUser;\n\n    var uploadTask = firebase.storage().ref('avatar/' + currentUser.uid + '.' + ext).putString(uri, 'base64', { contentType: 'image/jpg' });\n\n    uploadTask.on('state_changed',\n      (snapshot) => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload is ' + progress + '% done');\n        switch (snapshot.state) {\n          case firebase.storage.TaskState.PAUSED: // or 'paused'\n            console.log('Upload is paused');\n            break;\n          case firebase.storage.TaskState.RUNNING: // or 'running'\n            console.log('Upload is running');\n            break;\n        }\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n        console.log(error);\n      },\n      () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n          console.log('File available at', downloadURL);\n        });\n      }\n    );\n  } catch (error) {\n    console.log(error);\n  }\n\n  return result;\n}\n\nexport async function signOut() {\n  await AsyncStorage.setItem(\"currentPage\", String('0'));\n  await AsyncStorage.setItem(\"uid\", \"\");\n  firebase.auth().signOut();\n}"]},"metadata":{},"sourceType":"module"}