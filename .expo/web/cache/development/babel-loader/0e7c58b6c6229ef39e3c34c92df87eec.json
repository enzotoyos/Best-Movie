{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"children\", \"cardContainerStyle\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Animated from 'react-native-reanimated';\nvar CardWrap = React.forwardRef(function (_ref, ref) {\n  var style = _ref.style,\n      children = _ref.children,\n      cardContainerStyle = _ref.cardContainerStyle,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(Animated.View, _extends({\n    style: [style, cardContainerStyle]\n  }, rest, {\n    ref: ref\n  }), children);\n});\nexport default CardWrap;","map":{"version":3,"sources":["index.tsx"],"names":["CardWrap","rest","style","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,QAAA,MAAA,yBAAA;AAEA,IAAMA,QAAQ,GAAG,KAAK,CAAL,UAAA,CACf,gBAAA,GAAA,EAYK;AAAA,MAXH,KAWG,QAXH,KAWG;AAAA,MAXH,QAWG,QAXH,QAWG;AAAA,MAXH,kBAWG,QAXH,kBAWG;AAAA,MAPEC,IAOF;;AACH,SACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA,QAAA,CAAA;AACQC,IAAAA,KAAK,EAAE,CAAA,KAAA,EAAA,kBAAA;AADf,GAAA,EAAA,IAAA,EAAA;AAGE,IAAA,GAAG,EAAEC;AAHP,GAAA,CAAA,EADF,QACE,CADF;AAdJ,CAAiB,CAAjB;AA0BA,eAAA,QAAA","sourcesContent":["import type { ViewStyle, StyleProp } from 'react-native';\nimport React from 'react';\nimport Animated from 'react-native-reanimated';\n\nconst CardWrap = React.forwardRef(\n  (\n    {\n      style,\n      children,\n      cardContainerStyle,\n      ...rest\n    }: {\n      style: ViewStyle;\n      children?: React.ReactNode;\n      cardContainerStyle: StyleProp<ViewStyle>;\n    },\n    ref: React.LegacyRef<Animated.View> | undefined\n  ) => {\n    return (\n      <Animated.View\n        {...{ style: [style, cardContainerStyle] }}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </Animated.View>\n    );\n  }\n);\n\nexport default CardWrap;\n"]},"metadata":{},"sourceType":"module"}