{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Documents\\\\Ynov\\\\Mobile\\\\Best-Movie\\\\src\\\\navigation\\\\AppNavigator.js\";\n\nimport React, { useContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { useTheme, themeColor } from \"react-native-rapi-ui\";\nimport TabBarIcon from \"../components/utils/TabBarIcon\";\nimport TabBarText from \"../components/utils/TabBarText\";\nimport Home from \"../screens/Home\";\nimport SecondScreen from \"../screens/SecondScreen\";\nimport About from \"../screens/About\";\nimport Profile from \"../screens/Profile\";\nimport Loading from \"../screens/utils/Loading\";\nimport Login from \"../screens/auth/Login\";\nimport Register from \"../screens/auth/Register\";\nimport ForgetPassword from \"../screens/auth/ForgetPassword\";\nimport { AuthContext } from \"../provider/AuthProvider\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC7bv-_wwAPMZthRBKxUeKaC3KyLEvXm_c\",\n  authDomain: \"best-movie-e1fe8.firebaseapp.com\",\n  projectId: \"best-movie-e1fe8\",\n  storageBucket: \"best-movie-e1fe8.appspot.com\",\n  messagingSenderId: \"199365439320\",\n  appId: \"1:199365439320:web:ba3410c9d791cdfc03bf2d\",\n  measurementId: \"G-PPPKCN3VTM\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar AuthStack = createStackNavigator();\n\nvar Auth = function Auth() {\n  return React.createElement(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthStack.Screen, {\n    name: \"Login\",\n    component: Login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(AuthStack.Screen, {\n    name: \"Register\",\n    component: Register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(AuthStack.Screen, {\n    name: \"ForgetPassword\",\n    component: ForgetPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar MainStack = createStackNavigator();\n\nvar Main = function Main() {\n  return React.createElement(MainStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(MainStack.Screen, {\n    name: \"MainTabs\",\n    component: MainTabs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(MainStack.Screen, {\n    name: \"SecondScreen\",\n    component: SecondScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar Tabs = createBottomTabNavigator();\n\nvar MainTabs = function MainTabs() {\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode;\n\n  return React.createElement(Tabs.Navigator, {\n    tabBarOptions: {\n      style: {\n        borderTopWidth: 1,\n        borderTopColor: isDarkmode ? themeColor.dark100 : \"#c0c0c0\",\n        backgroundColor: isDarkmode ? themeColor.dark200 : \"#ffffff\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, React.createElement(Tabs.Screen, {\n    name: \"About\",\n    component: About,\n    options: {\n      tabBarLabel: function tabBarLabel(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(TabBarText, {\n          focused: focused,\n          title: \"Mes films\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        });\n      },\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          icon: \"film-outline\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      tabBarLabel: function tabBarLabel(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(TabBarText, {\n          focused: focused,\n          title: \"Accueil\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        });\n      },\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          icon: \"md-home\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: {\n      tabBarLabel: function tabBarLabel(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(TabBarText, {\n          focused: focused,\n          title: \"Profil\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }\n        });\n      },\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          icon: \"person\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default (function () {\n  var auth = useContext(AuthContext);\n  var user = auth.user;\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, user == null && React.createElement(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 24\n    }\n  }), user == false && React.createElement(Auth, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }), user == true && React.createElement(Main, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 24\n    }\n  }));\n});","map":{"version":3,"sources":["D:/Documents/Ynov/Mobile/Best-Movie/src/navigation/AppNavigator.js"],"names":["React","useContext","firebase","NavigationContainer","createStackNavigator","createBottomTabNavigator","useTheme","themeColor","TabBarIcon","TabBarText","Home","SecondScreen","About","Profile","Loading","Login","Register","ForgetPassword","AuthContext","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","AuthStack","Auth","headerShown","MainStack","Main","MainTabs","Tabs","isDarkmode","style","borderTopWidth","borderTopColor","dark100","backgroundColor","dark200","tabBarLabel","focused","tabBarIcon","auth","user"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport firebase from \"firebase/app\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\n\nimport { useTheme, themeColor } from \"react-native-rapi-ui\";\nimport TabBarIcon from \"../components/utils/TabBarIcon\";\nimport TabBarText from \"../components/utils/TabBarText\";\n//Screens\nimport Home from \"../screens/Home\";\nimport SecondScreen from \"../screens/SecondScreen\";\nimport About from \"../screens/About\";\nimport Profile from \"../screens/Profile\";\nimport Loading from \"../screens/utils/Loading\";\n// Auth screens\nimport Login from \"../screens/auth/Login\";\nimport Register from \"../screens/auth/Register\";\nimport ForgetPassword from \"../screens/auth/ForgetPassword\";\nimport { AuthContext } from \"../provider/AuthProvider\";\n\n// Better put your these secret keys in .env file\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC7bv-_wwAPMZthRBKxUeKaC3KyLEvXm_c\",\n  authDomain: \"best-movie-e1fe8.firebaseapp.com\",\n  projectId: \"best-movie-e1fe8\",\n  storageBucket: \"best-movie-e1fe8.appspot.com\",\n  messagingSenderId: \"199365439320\",\n  appId: \"1:199365439320:web:ba3410c9d791cdfc03bf2d\",\n  measurementId: \"G-PPPKCN3VTM\",\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst AuthStack = createStackNavigator();\nconst Auth = () => {\n  return (\n    <AuthStack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <AuthStack.Screen name=\"Login\" component={Login} />\n      <AuthStack.Screen name=\"Register\" component={Register} />\n      <AuthStack.Screen name=\"ForgetPassword\" component={ForgetPassword} />\n    </AuthStack.Navigator>\n  );\n};\n\nconst MainStack = createStackNavigator();\nconst Main = () => {\n  return (\n    <MainStack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <MainStack.Screen name=\"MainTabs\" component={MainTabs} />\n      <MainStack.Screen name=\"SecondScreen\" component={SecondScreen} />\n    </MainStack.Navigator>\n  );\n};\n\nconst Tabs = createBottomTabNavigator();\nconst MainTabs = () => {\n  const { isDarkmode } = useTheme();\n  return (\n    <Tabs.Navigator\n      tabBarOptions={{\n        style: {\n          borderTopWidth: 1,\n          borderTopColor: isDarkmode ? themeColor.dark100 : \"#c0c0c0\",\n          backgroundColor: isDarkmode ? themeColor.dark200 : \"#ffffff\",\n        },\n      }}\n    >\n      {/* these icons using Ionicons */}\n      <Tabs.Screen\n        name=\"About\"\n        component={About}\n        options={{\n          tabBarLabel: ({ focused }) => (\n            <TabBarText focused={focused} title=\"Mes films\" />\n          ),\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} icon={\"film-outline\"} />\n          ),\n        }}\n      />\n\n      <Tabs.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          tabBarLabel: ({ focused }) => (\n            <TabBarText focused={focused} title=\"Accueil\" />\n          ),\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} icon={\"md-home\"} />\n          ),\n        }}\n      />\n      <Tabs.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          tabBarLabel: ({ focused }) => (\n            <TabBarText focused={focused} title=\"Profil\" />\n          ),\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} icon={\"person\"} />\n          ),\n        }}\n      />\n    </Tabs.Navigator>\n  );\n};\n\nexport default () => {\n  const auth = useContext(AuthContext);\n  const user = auth.user;\n  return (\n    <NavigationContainer>\n      {user == null && <Loading />}\n      {user == false && <Auth />}\n      {user == true && <Main />}\n    </NavigationContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}