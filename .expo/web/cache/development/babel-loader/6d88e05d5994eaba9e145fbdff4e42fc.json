{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/enzotoyos/Desktop/Best-Movie/src/provider/AuthProvider.js\";\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nvar AuthContext = createContext();\n\nvar AuthProvider = function AuthProvider(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    checkLogin();\n  }, []);\n\n  function checkLogin() {\n    firebase.auth().onAuthStateChanged(function (u) {\n      if (u) {\n        if (u.emailVerified == true) {\n          setUser(true);\n          return;\n        } else {\n          setUser(false);\n          return;\n        }\n      } else {\n        setUser(false);\n        return;\n      }\n    });\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["/Users/enzotoyos/Desktop/Best-Movie/src/provider/AuthProvider.js"],"names":["React","createContext","useState","useEffect","firebase","AuthContext","AuthProvider","props","user","setUser","checkLogin","auth","onAuthStateChanged","u","emailVerified","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,IAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAE9B,kBAAwBL,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,UAAT,GAAsB;AACpBN,IAAAA,QAAQ,CAACO,IAAT,GAAgBC,kBAAhB,CAAmC,UAAUC,CAAV,EAAa;AAC9C,UAAIA,CAAJ,EAAO;AACL,YAAIA,CAAC,CAACC,aAAF,IAAmB,IAAvB,EAA6B;AAE3BL,UAAAA,OAAO,CAAC,IAAD,CAAP;AACA;AACD,SAJD,MAIO;AACLA,UAAAA,OAAO,CAAC,KAAD,CAAP;AACA;AACD;AAEF,OAVD,MAUO;AACLA,QAAAA,OAAO,CAAC,KAAD,CAAP;AACA;AAED;AACF,KAhBD;AAiBD;;AAED,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,IAAI,EAAJA;AADK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,KAAK,CAACQ,QALT,CADF;AASD,CArCD;;AAuCA,SAASV,WAAT,EAAsBC,YAAtB","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nconst AuthContext = createContext();\n\nconst AuthProvider = (props) => {\n  // user null = loading\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    checkLogin();\n  }, []);\n\n  function checkLogin() {\n    firebase.auth().onAuthStateChanged(function (u) {\n      if (u) {\n        if (u.emailVerified == true) {\n          //on verifie que le mail soit verifier avant de connecter le user\n          setUser(true);\n          return;\n        } else {\n          setUser(false);\n          return;\n        }\n        // getUserData();\n      } else {\n        setUser(false);\n        return;\n        // setUserData(null);\n      }\n    });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n"]},"metadata":{},"sourceType":"module"}