{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Documents\\\\Ynov\\\\Mobile\\\\Best-Movie\\\\src\\\\screens\\\\Home.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport firebase from \"firebase\";\nimport { Layout, Text, useTheme } from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Swiper from \"react-native-deck-swiper\";\nimport { discoveryFilms } from \"../API/index\";\nimport { pushFilmsOnFirestore } from \"./utils/controllerFirestore\";\nexport default function (_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var idCard;\n  var posterPath;\n  var title;\n\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode,\n      setTheme = _useTheme.setTheme;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movieList = _useState2[0],\n      setMovieList = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rating = _useState4[0],\n      setRating = _useState4[1];\n\n  useEffect(function () {\n    getDataMovie();\n  }, []);\n\n  var getDataMovie = function getDataMovie() {\n    var result;\n    return _regeneratorRuntime.async(function getDataMovie$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(discoveryFilms());\n\n          case 2:\n            result = _context.sent;\n            setMovieList(result.results);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setLoading = function setLoading(isLoad) {\n    if (!isLoad) {\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }\n      }, \"Loading\");\n    }\n  };\n\n  var onSwipeRight = function onSwipeRight(cardIndex) {\n    var currentUser, movie;\n    return _regeneratorRuntime.async(function onSwipeRight$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = firebase.auth().currentUser;\n            movie = movieList[cardIndex];\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(pushFilmsOnFirestore(currentUser.uid, true, movie.id, movie.poster_path, movie.title));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSwipeLeft = function onSwipeLeft(cardIndex) {\n    var currentUser, movie;\n    return _regeneratorRuntime.async(function onSwipeLeft$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            currentUser = firebase.auth().currentUser;\n            movie = movieList[cardIndex];\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(pushFilmsOnFirestore(currentUser.uid, false, movie.id, movie.poster_path, movie.title));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"bold\",\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Cr\\xE9er votre propre collection\"), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      marginBottom: 60,\n      backgroundColor: \"transparent\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Swiper, {\n    cards: movieList,\n    renderCard: function renderCard(card) {\n      if (!card) {\n        return React.createElement(View, {\n          style: styles.loading,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 24\n          }\n        }, setLoading(true));\n      } else {\n        idCard = card.id;\n        posterPath = card.poster_path;\n        title = card.original_title;\n        setRating(card.vote_average);\n        return React.createElement(View, {\n          style: styles.card,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: styles.originalTtile,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }\n        }, card.original_title), React.createElement(Image, {\n          style: styles.image,\n          source: {\n            uri: \"https://image.tmdb.org/t/p/w500\" + card.poster_path\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }\n        }));\n      }\n    },\n    onSwiped: function onSwiped(cardIndex) {},\n    onSwipedAll: function onSwipedAll() {\n      console.log(\"onSwipedAll\");\n    },\n    onSwipedLeft: function onSwipedLeft(cardIndex) {\n      return onSwipeLeft(cardIndex);\n    },\n    onSwipedRight: function onSwipedRight(cardIndex) {\n      onSwipeRight(cardIndex);\n    },\n    cardIndex: 0,\n    backgroundColor: \"transparent\",\n    stackSize: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: {\n      marginLeft: 100,\n      marginRight: 100,\n      marginTop: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"transparent\"\n  },\n  card: {\n    flex: 1,\n    borderRadius: 20,\n    borderWidth: 2,\n    backgroundColor: \"transparent\",\n    borderColor: \"transparent\",\n    justifyContent: \"center\",\n    marginBottom: \"50%\"\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 50,\n    backgroundColor: \"transparent\"\n  },\n  image: {\n    borderRadius: 18,\n    width: \"100%\",\n    height: \"100%\"\n  },\n  title: {\n    marginTop: \"5%\",\n    textAlign: \"center\",\n    fontSize: 20\n  },\n  originalTtile: {\n    textAlign: \"center\",\n    marginBottom: \"1%\"\n  }\n});","map":{"version":3,"sources":["D:/Documents/Ynov/Mobile/Best-Movie/src/screens/Home.js"],"names":["React","useEffect","useState","firebase","Layout","Text","useTheme","Ionicons","Swiper","discoveryFilms","pushFilmsOnFirestore","navigation","idCard","posterPath","title","isDarkmode","setTheme","movieList","setMovieList","rating","setRating","getDataMovie","result","results","setLoading","isLoad","onSwipeRight","cardIndex","currentUser","auth","movie","uid","id","poster_path","onSwipeLeft","styles","container","flex","alignItems","marginBottom","backgroundColor","card","loading","original_title","vote_average","originalTtile","image","uri","console","log","marginLeft","marginRight","marginTop","StyleSheet","create","borderRadius","borderWidth","borderColor","justifyContent","text","textAlign","fontSize","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StyleSheet, View, Image } from \"react-native\";\nimport firebase from \"firebase\";\nimport { Layout, Text, useTheme } from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Swiper from \"react-native-deck-swiper\";\nimport { discoveryFilms } from \"../API/index\";\nimport { pushFilmsOnFirestore } from \"./utils/controllerFirestore\";\n\nexport default function ({ navigation }) {\n  let idCard;\n  let posterPath;\n  let title;\n  const { isDarkmode, setTheme } = useTheme();\n  const [movieList, setMovieList] = useState([]);\n  const [rating, setRating] = useState(0);\n\n  useEffect(() => {\n    getDataMovie();\n  }, []);\n\n  const getDataMovie = async () => {\n    const result = await discoveryFilms();\n    setMovieList(result.results);\n  };\n\n  const setLoading = (isLoad) => {\n    if (!isLoad) {\n      return <Text>Loading</Text>;\n    }\n  };\n\n  const onSwipeRight = async (cardIndex) => {\n    const currentUser = firebase.auth().currentUser;\n    const movie = movieList[cardIndex];\n    await pushFilmsOnFirestore(\n      currentUser.uid,\n      true,\n      movie.id,\n      movie.poster_path,\n      movie.title\n    );\n  };\n\n  const onSwipeLeft = async (cardIndex) => {\n    const currentUser = firebase.auth().currentUser;\n    const movie = movieList[cardIndex];\n    await pushFilmsOnFirestore(\n      currentUser.uid,\n      false,\n      movie.id,\n      movie.poster_path,\n      movie.title\n    );\n  };\n\n  return (\n    <Layout>\n      <Text fontWeight=\"bold\" style={styles.title}>\n        Créer votre propre collection\n      </Text>\n      <View style={styles.container}>\n        <View\n          style={{\n            flex: 1,\n            alignItems: \"center\",\n            marginBottom: 60,\n            backgroundColor: \"transparent\",\n          }}\n        >\n          <Swiper\n            cards={movieList}\n            renderCard={(card) => {\n              if (!card) {\n                return <View style={styles.loading}>{setLoading(true)}</View>;\n              } else {\n                idCard = card.id;\n                posterPath = card.poster_path;\n                title = card.original_title;\n                setRating(card.vote_average);\n                return (\n                  <View style={styles.card}>\n                    <Text style={styles.originalTtile}>\n                      {card.original_title}\n                    </Text>\n                    <Image\n                      style={styles.image}\n                      source={{\n                        uri:\n                          \"https://image.tmdb.org/t/p/w500\" + card.poster_path,\n                      }}\n                    />\n                  </View>\n                );\n              }\n            }}\n            onSwiped={(cardIndex) => {\n              // console.log(cardIndex);\n            }}\n            onSwipedAll={() => {\n              console.log(\"onSwipedAll\");\n            }}\n            onSwipedLeft={(cardIndex) => onSwipeLeft(cardIndex)}\n            onSwipedRight={(cardIndex) => {\n              onSwipeRight(cardIndex)\n            }} // idem à droite\n            cardIndex={0}\n            backgroundColor={\"transparent\"}\n            stackSize={3}\n          />\n        </View>\n      </View>\n      <View\n        style={{ marginLeft: 100, marginRight: 100, marginTop: 200 }}\n      ></View>\n    </Layout>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"transparent\",\n  },\n  card: {\n    flex: 1,\n    borderRadius: 20,\n    borderWidth: 2,\n    backgroundColor: \"transparent\",\n    borderColor: \"transparent\",\n    justifyContent: \"center\",\n    marginBottom: \"50%\",\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 50,\n    backgroundColor: \"transparent\",\n  },\n  image: {\n    borderRadius: 18,\n    width: \"100%\",\n    height: \"100%\",\n  },\n  title: {\n    marginTop: \"5%\",\n    textAlign: \"center\",\n    fontSize: 20,\n  },\n  originalTtile: {\n    textAlign: \"center\",\n    marginBottom: \"1%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}