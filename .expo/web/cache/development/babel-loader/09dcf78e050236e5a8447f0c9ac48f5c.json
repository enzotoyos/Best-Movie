{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nexport var pushFilmsOnFirestore = function pushFilmsOnFirestore(userID, likedOrNo, movieID, posterURL, movieTitle) {\n  var db, docData, data, _data;\n\n  return _regeneratorRuntime.async(function pushFilmsOnFirestore$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          db = firebase.firestore();\n          docData = {\n            movieTitle: movieTitle,\n            movieID: movieID,\n            addedAt: Date.now(),\n            posterPath: posterURL\n          };\n\n          if (likedOrNo == true) {\n            data = db.collection(\"liked_films\").doc(userID);\n            data.update({\n              movie: firebase.firestore.FieldValue.arrayUnion(docData)\n            });\n          } else if (likedOrNo == false) {\n            _data = db.collection(\"unliked_films\").doc(userID);\n\n            _data.update({\n              movie: firebase.firestore.FieldValue.arrayUnion(docData)\n            });\n          }\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["D:/Utilisateurs/Armand/Documents/Ynov/WebMobilePWA/Best-Movie/src/screens/utils/pushFilmsFirestore.js"],"names":["React","firebase","pushFilmsOnFirestore","userID","likedOrNo","movieID","posterURL","movieTitle","db","firestore","docData","addedAt","Date","now","posterPath","data","collection","doc","update","movie","FieldValue","arrayUnion"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAClCC,MADkC,EAElCC,SAFkC,EAGlCC,OAHkC,EAIlCC,SAJkC,EAKlCC,UALkC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAO5BC,UAAAA,EAP4B,GAOvBP,QAAQ,CAACQ,SAAT,EAPuB;AAQ9BC,UAAAA,OAR8B,GAQpB;AACZH,YAAAA,UAAU,EAAEA,UADA;AAEZF,YAAAA,OAAO,EAAEA,OAFG;AAGZM,YAAAA,OAAO,EAAEC,IAAI,CAACC,GAAL,EAHG;AAIZC,YAAAA,UAAU,EAAER;AAJA,WARoB;;AAelC,cAAIF,SAAS,IAAI,IAAjB,EAAuB;AACjBW,YAAAA,IADiB,GACVP,EAAE,CAACQ,UAAH,CAAc,aAAd,EAA6BC,GAA7B,CAAiCd,MAAjC,CADU;AAGrBY,YAAAA,IAAI,CAACG,MAAL,CAAY;AAAEC,cAAAA,KAAK,EAAElB,QAAQ,CAACQ,SAAT,CAAmBW,UAAnB,CAA8BC,UAA9B,CAAyCX,OAAzC;AAAT,aAAZ;AACD,WAJD,MAIO,IAAIN,SAAS,IAAI,KAAjB,EAAwB;AACzBW,YAAAA,KADyB,GAClBP,EAAE,CAACQ,UAAH,CAAc,eAAd,EAA+BC,GAA/B,CAAmCd,MAAnC,CADkB;;AAG7BY,YAAAA,KAAI,CAACG,MAAL,CAAY;AAAEC,cAAAA,KAAK,EAAElB,QAAQ,CAACQ,SAAT,CAAmBW,UAAnB,CAA8BC,UAA9B,CAAyCX,OAAzC;AAAT,aAAZ;AACD;;AAvBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B","sourcesContent":["import React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\n\r\nexport const pushFilmsOnFirestore = async (\r\n  userID,\r\n  likedOrNo,\r\n  movieID,\r\n  posterURL,\r\n  movieTitle\r\n) => {\r\n  const db = firebase.firestore();\r\n  var docData = {\r\n    movieTitle: movieTitle,\r\n    movieID: movieID,\r\n    addedAt: Date.now(),\r\n    posterPath: posterURL,\r\n  };\r\n\r\n  if (likedOrNo == true) {\r\n    let data = db.collection(\"liked_films\").doc(userID);\r\n\r\n    data.update({ movie: firebase.firestore.FieldValue.arrayUnion(docData) });\r\n  } else if (likedOrNo == false) {\r\n    let data = db.collection(\"unliked_films\").doc(userID);\r\n\r\n    data.update({ movie: firebase.firestore.FieldValue.arrayUnion(docData) });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}