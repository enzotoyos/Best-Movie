{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/enzotoyos/Desktop/Best-Movie/src/screens/Profile.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { GetUser } from \"./utils/GetDataUser\";\nimport { Layout, Text, TextInput, Button, Avatar, useTheme } from \"react-native-rapi-ui\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport firebase from \"firebase\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode,\n      setTheme = _useTheme.setTheme;\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    var uid, user;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"uid\"));\n\n          case 3:\n            uid = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(GetUser());\n\n          case 6:\n            user = _context.sent;\n            _context.next = 11;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Avatar, {\n    source: require(\"../../media/avatar.png\"),\n    size: \"xl\",\n    shape: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, String(name)), React.createElement(TextInput, {\n    containerStyle: {\n      marginTop: 15\n    },\n    placeholder: \"mail\",\n    value: email,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    autoCorrect: false,\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    containerStyle: {\n      marginTop: 15\n    },\n    placeholder: \"identifiant\",\n    value: name,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"off\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    text: \"Modifier mon mot de passe\",\n    onPress: function onPress() {\n      getData();\n    },\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    text: \"Modifier mon Avatar\",\n    onPress: function onPress() {},\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    text: \"Modifier mes informations\",\n    onPress: function onPress() {},\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    status: \"danger\",\n    text: \"D\\xE9connexion\",\n    onPress: function onPress() {\n      firebase.auth().signOut();\n    },\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    text: isDarkmode ? \"Light Mode\" : \"Dark Mode\",\n    status: isDarkmode ? \"success\" : \"warning\",\n    onPress: function onPress() {\n      if (isDarkmode) {\n        setTheme(\"light\");\n      } else {\n        setTheme(\"dark\");\n      }\n    },\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/Users/enzotoyos/Desktop/Best-Movie/src/screens/Profile.js"],"names":["React","useState","useEffect","GetUser","Layout","Text","TextInput","Button","Avatar","useTheme","AsyncStorage","firebase","navigation","email","setEmail","name","setName","isDarkmode","setTheme","getData","getItem","uid","user","styles","container","require","button","String","marginTop","text","auth","signOut","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { GetUser } from \"./utils/GetDataUser\";\nimport {\n  Layout,\n  Text,\n  TextInput,\n  Button,\n  Avatar,\n  useTheme,\n} from \"react-native-rapi-ui\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport firebase from \"firebase\";\n\nexport default function ({ navigation }) {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const { isDarkmode, setTheme } = useTheme();\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    try {\n      const uid = await AsyncStorage.getItem(\"uid\");\n      const user = await GetUser();\n    } catch (e) {\n      // error reading value\n    }\n  };\n\n  return (\n    <Layout>\n      <View style={styles.container}>\n        <Avatar\n          source={require(\"../../media/avatar.png\")}\n          size=\"xl\"\n          shape=\"round\"\n        />\n        <Text style={styles.button}>{String(name)}</Text>\n\n        <TextInput\n          containerStyle={{ marginTop: 15 }}\n          placeholder=\"mail\"\n          value={email}\n          autoCapitalize=\"none\"\n          autoCompleteType=\"off\"\n          autoCorrect={false}\n          keyboardType=\"email-address\"\n          onChangeText={(text) => setEmail(text)}\n        />\n        <TextInput\n          containerStyle={{ marginTop: 15 }}\n          placeholder=\"identifiant\"\n          value={name}\n          autoCapitalize=\"none\"\n          autoCompleteType=\"off\"\n          autoCorrect={false}\n          onChangeText={(text) => setName(text)}\n        />\n\n        <Button\n          text=\"Modifier mon mot de passe\"\n          onPress={() => {\n            getData();\n          }}\n          style={styles.button}\n        />\n        <Button\n          text=\"Modifier mon Avatar\"\n          onPress={() => {\n            //\n          }}\n          style={styles.button}\n        />\n        <Button\n          text=\"Modifier mes informations\"\n          onPress={() => {\n            //\n          }}\n          style={styles.button}\n        />\n        <Button\n          status=\"danger\"\n          text=\"Déconnexion\"\n          onPress={() => {\n            firebase.auth().signOut();\n          }}\n          style={styles.button}\n        />\n        <Button\n          text={isDarkmode ? \"Light Mode\" : \"Dark Mode\"}\n          status={isDarkmode ? \"success\" : \"warning\"}\n          onPress={() => {\n            if (isDarkmode) {\n              setTheme(\"light\");\n            } else {\n              setTheme(\"dark\");\n            }\n          }}\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </View>\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    marginTop: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}