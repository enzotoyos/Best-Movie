{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated, { interpolate, useAnimatedStyle, useSharedValue, withSpring, withTiming, runOnJS, withDelay } from 'react-native-reanimated';\nimport SwipePan from \"../SwipePan\";\nimport CardWrap from \"../CardWrap\";\nimport styles from \"./styles\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar CardsSwipe = forwardRef(function (_ref, ref) {\n  var cards = _ref.cards,\n      renderCard = _ref.renderCard,\n      _ref$loop = _ref.loop,\n      loop = _ref$loop === void 0 ? true : _ref$loop,\n      _ref$renderNoMoreCard = _ref.renderNoMoreCard,\n      renderNoMoreCard = _ref$renderNoMoreCard === void 0 ? function () {\n    return null;\n  } : _ref$renderNoMoreCard,\n      _ref$renderYep = _ref.renderYep,\n      renderYep = _ref$renderYep === void 0 ? function () {\n    return null;\n  } : _ref$renderYep,\n      _ref$renderNope = _ref.renderNope,\n      renderNope = _ref$renderNope === void 0 ? function () {\n    return null;\n  } : _ref$renderNope,\n      _ref$initialIndex = _ref.initialIndex,\n      initialIndex = _ref$initialIndex === void 0 ? 0 : _ref$initialIndex,\n      _ref$containerStyle = _ref.containerStyle,\n      containerStyle = _ref$containerStyle === void 0 ? {} : _ref$containerStyle,\n      _ref$cardContainerSty = _ref.cardContainerStyle,\n      cardContainerStyle = _ref$cardContainerSty === void 0 ? {} : _ref$cardContainerSty,\n      _ref$lowerCardZoom = _ref.lowerCardZoom,\n      lowerCardZoom = _ref$lowerCardZoom === void 0 ? 0.95 : _ref$lowerCardZoom,\n      _ref$animDuration = _ref.animDuration,\n      animDuration = _ref$animDuration === void 0 ? 150 : _ref$animDuration,\n      _ref$horizontalThresh = _ref.horizontalThreshold,\n      horizontalThreshold = _ref$horizontalThresh === void 0 ? width * 0.65 : _ref$horizontalThresh,\n      _ref$rotationAngle = _ref.rotationAngle,\n      rotationAngle = _ref$rotationAngle === void 0 ? 10 : _ref$rotationAngle,\n      _ref$onSwipeStart = _ref.onSwipeStart,\n      onSwipeStart = _ref$onSwipeStart === void 0 ? function () {} : _ref$onSwipeStart,\n      _ref$onSwipeEnd = _ref.onSwipeEnd,\n      onSwipeEnd = _ref$onSwipeEnd === void 0 ? function () {} : _ref$onSwipeEnd,\n      _ref$onSwiped = _ref.onSwiped,\n      onSwiped = _ref$onSwiped === void 0 ? function () {} : _ref$onSwiped,\n      _ref$onSwipedLeft = _ref.onSwipedLeft,\n      onSwipedLeft = _ref$onSwipedLeft === void 0 ? function () {} : _ref$onSwipedLeft,\n      _ref$onSwipedRight = _ref.onSwipedRight,\n      onSwipedRight = _ref$onSwipedRight === void 0 ? function () {} : _ref$onSwipedRight;\n\n  var _useState = useState(initialIndex),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lock = _useState4[0],\n      setLock = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      noMoreCards = _useState6[0],\n      setNoMoreCards = _useState6[1];\n\n  var scale = useSharedValue(1);\n  var overrideNopeOpacity = useSharedValue(0);\n  var overrideLikeOpacity = useSharedValue(0);\n\n  var _useState7 = useState(index + 1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      secondIndex = _useState8[0],\n      setSecondIndex = _useState8[1];\n\n  useImperativeHandle(ref, function () {\n    return {\n      swipeLeft: swipeLeft,\n      swipeRight: swipeRight\n    };\n  });\n  var prevCards = useRef(cards);\n  useEffect(function () {\n    if (prevCards.current !== cards) {\n      prevCards.current = cards;\n\n      if (noMoreCards) {\n        setIndex(0);\n        setSecondIndex(1);\n        setNoMoreCards(false);\n        x.value = 0;\n        y.value = 0;\n      }\n    }\n  }, [cards]);\n\n  var swipeLeft = function swipeLeft() {\n    if (index >= 0) {\n      overrideNopeOpacity.value = withSpring(1);\n      setTimeout(function () {\n        return onCardSwiped(false);\n      }, 300);\n    }\n  };\n\n  var swipeRight = function swipeRight() {\n    if (index >= 0) {\n      overrideLikeOpacity.value = withSpring(1);\n      setTimeout(function () {\n        return onCardSwiped(true);\n      }, 300);\n    }\n  };\n\n  var onStartSwipe = useCallback(function () {\n    onSwipeStart(index);\n  }, [index, onSwipeStart]);\n  var onEndSwipe = useCallback(function () {\n    onSwipeEnd(index);\n  }, [index, onSwipeEnd]);\n  var onCardSwiped = useCallback(function (right) {\n    setLock(true);\n    onSwiped(index);\n\n    var onEndCardAnimation = function onEndCardAnimation() {\n      var resetPosition = function resetPosition(secondCardIndex) {\n        x.value = withDelay(100, withTiming(0, {\n          duration: 0\n        }, function () {\n          runOnJS(setSecondIndex)(secondCardIndex);\n        }));\n        y.value = withDelay(100, withTiming(0, {\n          duration: 0\n        }));\n      };\n\n      if (loop || index + 2 < cards.length) {\n        var incSafe = function incSafe(i) {\n          return (i + 1) % cards.length;\n        };\n\n        setIndex(incSafe(index));\n        resetPosition(incSafe(secondIndex));\n      } else if (index + 1 < cards.length) {\n        setIndex(index + 1);\n        resetPosition(-1);\n      } else {\n        setIndex(-1);\n        setNoMoreCards(true);\n      }\n\n      overrideNopeOpacity.value = 0;\n      overrideLikeOpacity.value = 0;\n      setLock(false);\n    };\n\n    if (right) {\n      onSwipedRight(index);\n      x.value = withTiming(width * 1.5, {\n        duration: animDuration\n      }, function () {\n        runOnJS(onEndCardAnimation)();\n      });\n      y.value = withSpring(0);\n    } else {\n      onSwipedLeft(index);\n      x.value = withTiming(-width * 1.5, {\n        duration: animDuration\n      }, function () {\n        runOnJS(onEndCardAnimation)();\n      });\n      y.value = withSpring(0);\n    }\n  }, [index, secondIndex, cards, onSwiped, onSwipedRight, onSwipedLeft]);\n\n  var renderNoMoreCardsContainer = function renderNoMoreCardsContainer() {\n    if (noMoreCards) {\n      return React.createElement(View, null, renderNoMoreCard());\n    }\n\n    return null;\n  };\n\n  var x = useSharedValue(0);\n  var y = useSharedValue(0);\n  var originY = useSharedValue(0);\n  var nopeOpacityStyle = useAnimatedStyle(function () {\n    var opacity = interpolate(x.value, [0, -horizontalThreshold], [0, 1]);\n    return {\n      opacity: overrideNopeOpacity.value || opacity\n    };\n  });\n  var likeOpacityStyle = useAnimatedStyle(function () {\n    var opacity = interpolate(x.value, [0, horizontalThreshold], [0, 1]);\n    return {\n      opacity: overrideLikeOpacity.value || opacity\n    };\n  });\n  var style = useAnimatedStyle(function () {\n    var factor = 1;\n    var rotateZ = interpolate(x.value, [0, factor * horizontalThreshold], [0, rotationAngle]);\n    return {\n      elevation: 2,\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transform: [{\n        scale: scale.value\n      }, {\n        translateX: x.value\n      }, {\n        translateY: y.value\n      }, {\n        rotateZ: rotateZ + \"deg\"\n      }]\n    };\n  });\n  var lowerStyle = useAnimatedStyle(function () {\n    var lowerCardScale = interpolate(x.value, [-horizontalThreshold, -0.01, 0, 0.01, horizontalThreshold], [1, lowerCardZoom, lowerCardZoom, lowerCardZoom, 1], Animated.Extrapolate.CLAMP);\n    return {\n      zIndex: -1,\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transform: [{\n        translateX: 0\n      }, {\n        translateY: 0\n      }, {\n        scale: secondIndex >= 0 ? lowerCardScale : 1\n      }]\n    };\n  });\n  return React.createElement(View, {\n    pointerEvents: lock ? 'none' : 'auto',\n    style: [styles.container, containerStyle]\n  }, secondIndex >= 0 ? React.createElement(CardWrap, {\n    key: secondIndex,\n    pointerEvents: 'none',\n    style: lowerStyle,\n    cardContainerStyle: cardContainerStyle\n  }, renderCard(cards[secondIndex])) : null, index >= 0 ? React.createElement(SwipePan, {\n    onSnap: onCardSwiped,\n    onStart: onStartSwipe,\n    onEnd: onEndSwipe,\n    x: x,\n    y: y,\n    originY: originY\n  }, React.createElement(CardWrap, {\n    style: style,\n    cardContainerStyle: cardContainerStyle\n  }, renderCard(cards[index]), React.createElement(Animated.View, {\n    style: styles.overlay,\n    pointerEvents: 'none'\n  }, React.createElement(View, {\n    style: styles.row\n  }, React.createElement(Animated.View, {\n    style: likeOpacityStyle\n  }, renderYep()), React.createElement(Animated.View, {\n    style: nopeOpacityStyle\n  }, renderNope()))))) : null, renderNoMoreCardsContainer());\n});\nexport default CardsSwipe;","map":{"version":3,"sources":["index.tsx"],"names":["width","Dimensions","CardsSwipe","forwardRef","loop","renderNoMoreCard","renderYep","renderNope","initialIndex","containerStyle","cardContainerStyle","lowerCardZoom","animDuration","horizontalThreshold","rotationAngle","onSwipeStart","onSwipeEnd","onSwiped","onSwipedLeft","onSwipedRight","useState","scale","useSharedValue","overrideNopeOpacity","overrideLikeOpacity","index","useImperativeHandle","swipeLeft","swipeRight","prevCards","useRef","useEffect","setIndex","setSecondIndex","setNoMoreCards","x","y","withSpring","setTimeout","onCardSwiped","onStartSwipe","useCallback","onEndSwipe","right","setLock","onEndCardAnimation","resetPosition","secondCardIndex","withDelay","withTiming","duration","runOnJS","cards","incSafe","i","renderNoMoreCardsContainer","originY","nopeOpacityStyle","useAnimatedStyle","opacity","interpolate","likeOpacityStyle","style","factor","rotateZ","elevation","height","position","alignItems","justifyContent","transform","value","translateX","translateY","lowerStyle","lowerCardScale","Animated","zIndex","secondIndex","lock","styles","key","pointerEvents","renderCard","onSnap","onStart","onEnd","row"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  Ref,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport { Dimensions, View, StyleProp, ViewStyle } from 'react-native';\nimport Animated, {\n  interpolate,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n  withTiming,\n  runOnJS,\n  withDelay,\n} from 'react-native-reanimated';\n\nimport SwipePan from '../SwipePan';\nimport CardWrap from '../CardWrap';\n\nimport styles from './styles';\n\nconst { width } = Dimensions.get('window');\n\ninterface CardsSwipeProps {\n  cards: Array<any>;\n  renderCard: (card: any) => React.ReactNode;\n  loop?: boolean;\n  renderNoMoreCard?: () => React.ReactNode;\n  renderYep?: () => React.ReactNode;\n  renderNope?: () => React.ReactNode;\n  initialIndex?: number;\n  containerStyle?: StyleProp<ViewStyle>;\n  cardContainerStyle?: StyleProp<ViewStyle>;\n  lowerCardZoom?: number;\n  animDuration?: number;\n  horizontalThreshold?: number;\n  rotationAngle?: number;\n  onSwipeStart?: (index: number) => void;\n  onSwipeEnd?: (index: number) => void;\n  onSwiped?: (index: number) => void;\n  onSwipedLeft?: (index: number) => void;\n  onSwipedRight?: (index: number) => void;\n}\n\nconst CardsSwipe = forwardRef(\n  (\n    {\n      cards,\n      renderCard,\n      loop = true,\n      renderNoMoreCard = () => null,\n      renderYep = () => null,\n      renderNope = () => null,\n      initialIndex = 0,\n      containerStyle = {},\n      cardContainerStyle = {},\n      lowerCardZoom = 0.95,\n      animDuration = 150,\n      horizontalThreshold = width * 0.65,\n      rotationAngle = 10,\n      onSwipeStart = () => {},\n      onSwipeEnd = () => {},\n      onSwiped = () => {},\n      onSwipedLeft = () => {},\n      onSwipedRight = () => {},\n    }: CardsSwipeProps,\n    ref: Ref<CardsSwipeRefObject>\n  ) => {\n    const [index, setIndex] = useState(initialIndex);\n    const [lock, setLock] = useState(false);\n    const [noMoreCards, setNoMoreCards] = useState(false);\n    const scale = useSharedValue(1);\n    const overrideNopeOpacity = useSharedValue(0);\n    const overrideLikeOpacity = useSharedValue(0);\n\n    const [secondIndex, setSecondIndex] = useState(index + 1);\n\n    useImperativeHandle(ref, () => ({ swipeLeft, swipeRight }));\n\n    const prevCards = useRef(cards);\n    useEffect(() => {\n      if (prevCards.current !== cards) {\n        prevCards.current = cards;\n        if (noMoreCards) {\n          setIndex(0);\n          setSecondIndex(1);\n          setNoMoreCards(false);\n          x.value = 0;\n          y.value = 0;\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [cards]);\n\n    const swipeLeft = () => {\n      if (index >= 0) {\n        overrideNopeOpacity.value = withSpring(1);\n        setTimeout(() => onCardSwiped(false), 300);\n      }\n    };\n\n    const swipeRight = () => {\n      if (index >= 0) {\n        overrideLikeOpacity.value = withSpring(1);\n        setTimeout(() => onCardSwiped(true), 300);\n      }\n    };\n\n    const onStartSwipe = useCallback(() => {\n      onSwipeStart(index);\n    }, [index, onSwipeStart]);\n\n    const onEndSwipe = useCallback(() => {\n      onSwipeEnd(index);\n    }, [index, onSwipeEnd]);\n\n    const onCardSwiped = useCallback(\n      (right) => {\n        setLock(true);\n\n        onSwiped(index);\n\n        const onEndCardAnimation = () => {\n          const resetPosition = (secondCardIndex: number) => {\n            x.value = withDelay(\n              100,\n              withTiming(0, { duration: 0 }, () => {\n                runOnJS(setSecondIndex)(secondCardIndex);\n              })\n            );\n            y.value = withDelay(100, withTiming(0, { duration: 0 }));\n          };\n          if (loop || index + 2 < cards.length) {\n            const incSafe = (i: number) => (i + 1) % cards.length;\n            setIndex(incSafe(index));\n            resetPosition(incSafe(secondIndex));\n          } else if (index + 1 < cards.length) {\n            setIndex(index + 1);\n            resetPosition(-1);\n          } else {\n            setIndex(-1);\n            setNoMoreCards(true);\n          }\n          overrideNopeOpacity.value = 0;\n          overrideLikeOpacity.value = 0;\n\n          setLock(false);\n        };\n\n        if (right) {\n          onSwipedRight(index);\n          x.value = withTiming(width * 1.5, { duration: animDuration }, () => {\n            runOnJS(onEndCardAnimation)();\n          });\n          y.value = withSpring(0);\n        } else {\n          onSwipedLeft(index);\n          x.value = withTiming(-width * 1.5, { duration: animDuration }, () => {\n            runOnJS(onEndCardAnimation)();\n          });\n          y.value = withSpring(0);\n        }\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [index, secondIndex, cards, onSwiped, onSwipedRight, onSwipedLeft]\n    );\n\n    const renderNoMoreCardsContainer = () => {\n      if (noMoreCards) {\n        return <View>{renderNoMoreCard()}</View>;\n      }\n      return null;\n    };\n\n    const x = useSharedValue(0);\n    const y = useSharedValue(0);\n    const originY = useSharedValue(0);\n\n    const nopeOpacityStyle = useAnimatedStyle(() => {\n      const opacity = interpolate(x.value, [0, -horizontalThreshold], [0, 1]);\n\n      return {\n        opacity: overrideNopeOpacity.value || opacity,\n      };\n    });\n\n    const likeOpacityStyle = useAnimatedStyle(() => {\n      const opacity = interpolate(x.value, [0, horizontalThreshold], [0, 1]);\n\n      return {\n        opacity: overrideLikeOpacity.value || opacity,\n      };\n    });\n\n    const style = useAnimatedStyle(() => {\n      const factor = 1;\n\n      const rotateZ = interpolate(\n        x.value,\n        [0, factor * horizontalThreshold],\n        [0, rotationAngle]\n      );\n\n      return {\n        elevation: 2,\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        alignItems: 'center',\n        justifyContent: 'center',\n        transform: [\n          { scale: scale.value },\n          { translateX: x.value },\n          { translateY: y.value },\n          { rotateZ: `${rotateZ}deg` },\n        ],\n      };\n    });\n\n    const lowerStyle = useAnimatedStyle(() => {\n      const lowerCardScale = interpolate(\n        x.value,\n        [-horizontalThreshold, -0.01, 0, 0.01, horizontalThreshold],\n        [1, lowerCardZoom, lowerCardZoom, lowerCardZoom, 1],\n        Animated.Extrapolate.CLAMP\n      );\n\n      return {\n        zIndex: -1,\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        alignItems: 'center',\n        justifyContent: 'center',\n        transform: [\n          { translateX: 0 },\n          { translateY: 0 },\n          { scale: secondIndex >= 0 ? lowerCardScale : 1 },\n        ],\n      };\n    });\n\n    return (\n      <View\n        pointerEvents={lock ? 'none' : 'auto'}\n        style={[styles.container, containerStyle]}\n      >\n        {secondIndex >= 0 ? (\n          <CardWrap\n            {...{\n              key: secondIndex,\n              pointerEvents: 'none',\n              style: lowerStyle,\n              cardContainerStyle,\n            }}\n          >\n            {renderCard(cards[secondIndex])}\n          </CardWrap>\n        ) : null}\n        {index >= 0 ? (\n          <SwipePan\n            {...{\n              onSnap: onCardSwiped,\n              onStart: onStartSwipe,\n              onEnd: onEndSwipe,\n              x,\n              y,\n              originY,\n            }}\n          >\n            <CardWrap\n              {...{\n                style,\n                cardContainerStyle,\n              }}\n            >\n              {renderCard(cards[index])}\n              <Animated.View style={styles.overlay} pointerEvents={'none'}>\n                <View style={styles.row}>\n                  <Animated.View style={likeOpacityStyle}>\n                    {renderYep()}\n                  </Animated.View>\n                  <Animated.View style={nopeOpacityStyle}>\n                    {renderNope()}\n                  </Animated.View>\n                </View>\n              </Animated.View>\n            </CardWrap>\n          </SwipePan>\n        ) : null}\n        {renderNoMoreCardsContainer()}\n      </View>\n    );\n  }\n);\n\nexport default CardsSwipe;\n"]},"metadata":{},"sourceType":"module"}